[{"path":"https://schochastics.github.io/netUtils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 David Schoch Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://schochastics.github.io/netUtils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Schoch. Author, maintainer.","code":""},{"path":"https://schochastics.github.io/netUtils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"David Schoch (2023). netUtils: Collection Tools Network Analysis","code":"@Manual{,   title = {netUtils: A Collection of Tools for Network Analysis},   author = {David Schoch},   year = {2023}, }"},{"path":"https://schochastics.github.io/netUtils/index.html","id":"netutils-","dir":"","previous_headings":"","what":"A Collection of Tools for Network Analysis","title":"A Collection of Tools for Network Analysis","text":"netUtils collection tools network analysis may deserve package /missing network packages.","code":""},{"path":"https://schochastics.github.io/netUtils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Collection of Tools for Network Analysis","text":"can install development version netUtils :","code":"# install.packages(\"remotes\") remotes::install_github(\"schochastics/netUtils\")"},{"path":"https://schochastics.github.io/netUtils/index.html","id":"functions","dir":"","previous_headings":"","what":"Functions","title":"A Collection of Tools for Network Analysis","text":"functions support igraph objects helper/convenience functionsbiggest_component() extracts biggest connected component network.delete_isolates() deletes vertices degree zero.bipartite_from_data_frame() creates two mode network data frame.graph_from_multi_edgelist() creates multiple graphs typed edgelist.clique_vertex_mat() computes clique vertex matrix.graph_cartesian() computes Cartesian product two graphs.graph_direct() computes direct (tensor) product graphs.str() extends str work igraph objects. methodsdyad_census_attr() calculates dyad census node attributes.triad_census_attr() calculates triad census node attributes.core_periphery() fits discrete core periphery model.graph_kpartite() creates random k-partite network.split_graph() sample graph perfect core periphery structure.sample_coreseq() creates random graph given coreness sequence.sample_pa_homophilic() creates preferential attachment graph two groups nodes.sample_lfr() create LFR benchmark graph community detection.structural_equivalence() finds structurally equivalent vertices.reciprocity_cor() reciprocity correlation coefficient. methods use caution(functions used know )as_adj_list1() extracts adjacency list faster, less stable, igraph objects.as_adj_weighted() extracts dense weighted adjacency matrix fast.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/as_adj_list1.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjacency list — as_adj_list1","title":"Adjacency list — as_adj_list1","text":"Create adjacency lists graph, either adjacent edges neighboring vertices. version faster version igraph less general.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/as_adj_list1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjacency list — as_adj_list1","text":"","code":"as_adj_list1(g)"},{"path":"https://schochastics.github.io/netUtils/reference/as_adj_list1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjacency list — as_adj_list1","text":"g igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/as_adj_list1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjacency list — as_adj_list1","text":"list numeric vectors.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/as_adj_list1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjacency list — as_adj_list1","text":"function mode parameter returns adjacency list comparable as_adj_list(g,mode=\")","code":""},{"path":"https://schochastics.github.io/netUtils/reference/as_adj_list1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adjacency list — as_adj_list1","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/as_adj_list1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjacency list — as_adj_list1","text":"","code":"library(igraph) #>  #> Attaching package: ‘igraph’ #> The following objects are masked from ‘package:stats’: #>  #>     decompose, spectrum #> The following object is masked from ‘package:base’: #>  #>     union g <- make_ring(10) as_adj_list1(g) #> [[1]] #> [1]  2 10 #>  #> [[2]] #> [1] 1 3 #>  #> [[3]] #> [1] 2 4 #>  #> [[4]] #> [1] 3 5 #>  #> [[5]] #> [1] 4 6 #>  #> [[6]] #> [1] 5 7 #>  #> [[7]] #> [1] 6 8 #>  #> [[8]] #> [1] 7 9 #>  #> [[9]] #> [1]  8 10 #>  #> [[10]] #> [1] 1 9 #>"},{"path":"https://schochastics.github.io/netUtils/reference/as_adj_weighted.html","id":null,"dir":"Reference","previous_headings":"","what":"weighted dense adjacency matrix — as_adj_weighted","title":"weighted dense adjacency matrix — as_adj_weighted","text":"returns weighted adjacency matrix dense format","code":""},{"path":"https://schochastics.github.io/netUtils/reference/as_adj_weighted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"weighted dense adjacency matrix — as_adj_weighted","text":"","code":"as_adj_weighted(g, attr = NULL)"},{"path":"https://schochastics.github.io/netUtils/reference/as_adj_weighted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"weighted dense adjacency matrix — as_adj_weighted","text":"g igraph object attr Either NULL character string giving edge attribute name. NULL traditional adjacency matrix returned. NULL values given edge attribute included adjacency matrix.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/as_adj_weighted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"weighted dense adjacency matrix — as_adj_weighted","text":"Numeric matrix","code":""},{"path":"https://schochastics.github.io/netUtils/reference/as_adj_weighted.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"weighted dense adjacency matrix — as_adj_weighted","text":"method faster as_adj igraph need weighted adjacency matrix dense format","code":""},{"path":"https://schochastics.github.io/netUtils/reference/as_adj_weighted.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"weighted dense adjacency matrix — as_adj_weighted","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/as_adj_weighted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"weighted dense adjacency matrix — as_adj_weighted","text":"","code":"library(igraph) g <- sample_gnp(10, 0.2) E(g)$weight <- runif(ecount(g)) as_adj_weighted(g, attr=\"weight\") #>       [,1]      [,2]      [,3]      [,4]      [,5]      [,6] [,7] [,8] #>  [1,]    0 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0    0 #>  [2,]    0 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0    0 #>  [3,]    0 0.0000000 0.0000000 0.0000000 0.0000000 0.2898923    0    0 #>  [4,]    0 0.0000000 0.0000000 0.0000000 0.0000000 0.6783804    0    0 #>  [5,]    0 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0    0 #>  [6,]    0 0.0000000 0.2898923 0.6783804 0.0000000 0.0000000    0    0 #>  [7,]    0 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0    0 #>  [8,]    0 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0    0 #>  [9,]    0 0.0000000 0.0000000 0.0000000 0.7353196 0.1959567    0    0 #> [10,]    0 0.9805397 0.0000000 0.0000000 0.7415215 0.0000000    0    0 #>            [,9]     [,10] #>  [1,] 0.0000000 0.0000000 #>  [2,] 0.0000000 0.9805397 #>  [3,] 0.0000000 0.0000000 #>  [4,] 0.0000000 0.0000000 #>  [5,] 0.7353196 0.7415215 #>  [6,] 0.1959567 0.0000000 #>  [7,] 0.0000000 0.0000000 #>  [8,] 0.0000000 0.0000000 #>  [9,] 0.0000000 0.0000000 #> [10,] 0.0000000 0.0000000"},{"path":"https://schochastics.github.io/netUtils/reference/as_multi_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of graphs to an adjacency matrices — as_multi_adj","title":"Convert a list of graphs to an adjacency matrices — as_multi_adj","text":"Convenience function turns list igraph objects adjacency matrices.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/as_multi_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of graphs to an adjacency matrices — as_multi_adj","text":"","code":"as_multi_adj(g_lst, attr = NULL, sparse = FALSE)"},{"path":"https://schochastics.github.io/netUtils/reference/as_multi_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of graphs to an adjacency matrices — as_multi_adj","text":"g_lst list igraph object attr Either NULL character string giving edge attribute name. NULL binary adjacency matrix returned. sparse Logical scalar, whether create sparse matrix. 'Matrix' package must installed creating sparse matrices.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/as_multi_adj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of graphs to an adjacency matrices — as_multi_adj","text":"List numeric matrices","code":""},{"path":"https://schochastics.github.io/netUtils/reference/as_multi_adj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a list of graphs to an adjacency matrices — as_multi_adj","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/bipartite_from_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"two-mode network from a data.frame — bipartite_from_data_frame","title":"two-mode network from a data.frame — bipartite_from_data_frame","text":"Create two-mode network data.frame","code":""},{"path":"https://schochastics.github.io/netUtils/reference/bipartite_from_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"two-mode network from a data.frame — bipartite_from_data_frame","text":"","code":"bipartite_from_data_frame(d, type1, type2, attr = NULL, weighted = TRUE)"},{"path":"https://schochastics.github.io/netUtils/reference/bipartite_from_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"two-mode network from a data.frame — bipartite_from_data_frame","text":"d data.frame type1 column name mode 1 type2 column name mode 2 attr named list edge attributes weighted weighted graph created multiple edges occur","code":""},{"path":"https://schochastics.github.io/netUtils/reference/bipartite_from_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"two-mode network from a data.frame — bipartite_from_data_frame","text":"two mode network igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/bipartite_from_data_frame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"two-mode network from a data.frame — bipartite_from_data_frame","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/bipartite_from_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"two-mode network from a data.frame — bipartite_from_data_frame","text":"","code":"library(igraph) edges <- data.frame(mode1=1:5,mode2=letters[1:5]) bipartite_from_data_frame(edges,\"mode1\",\"mode2\") #> IGRAPH 5f97cb1 UN-B 10 5 --  #> + attr: name (v/c), type (v/l) #> + edges from 5f97cb1 (vertex names): #> [1] 1--a 2--b 3--c 4--d 5--e"},{"path":"https://schochastics.github.io/netUtils/reference/clique_vertex_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Clique Vertex Matrix — clique_vertex_mat","title":"Clique Vertex Matrix — clique_vertex_mat","text":"Creates clique vertex matrix entries (,j) equal one node j clique ","code":""},{"path":"https://schochastics.github.io/netUtils/reference/clique_vertex_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clique Vertex Matrix — clique_vertex_mat","text":"","code":"clique_vertex_mat(g)"},{"path":"https://schochastics.github.io/netUtils/reference/clique_vertex_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clique Vertex Matrix — clique_vertex_mat","text":"g igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/clique_vertex_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clique Vertex Matrix — clique_vertex_mat","text":"Numeric matrix","code":""},{"path":"https://schochastics.github.io/netUtils/reference/clique_vertex_mat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Clique Vertex Matrix — clique_vertex_mat","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/clique_vertex_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clique Vertex Matrix — clique_vertex_mat","text":"","code":"library(igraph) g <- sample_gnp(10,0.2) clique_vertex_mat(g) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,]    0    0    1    0    0    0    0    0    0     0 #>  [2,]    0    1    0    0    0    0    0    0    0     0 #>  [3,]    0    0    0    0    0    0    1    0    1     0 #>  [4,]    0    0    0    0    0    0    0    1    1     0 #>  [5,]    0    0    0    0    1    0    0    1    0     0 #>  [6,]    1    0    0    0    0    0    0    1    0     0 #>  [7,]    0    0    0    0    1    0    0    0    0     1 #>  [8,]    0    0    0    1    0    0    0    0    0     1 #>  [9,]    0    0    0    1    0    1    0    0    0     0 #> [10,]    0    0    0    0    1    1    0    0    0     0"},{"path":"https://schochastics.github.io/netUtils/reference/core_periphery.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete core-periphery model — core_periphery","title":"Discrete core-periphery model — core_periphery","text":"Fits discrete core-periphery model given network","code":""},{"path":"https://schochastics.github.io/netUtils/reference/core_periphery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete core-periphery model — core_periphery","text":"","code":"core_periphery(graph, method = \"rk1_dc\", iter = 500, ...)"},{"path":"https://schochastics.github.io/netUtils/reference/core_periphery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discrete core-periphery model — core_periphery","text":"graph igraph object method algorithm use (see details) iter number iterations method=GA ... parameters GA","code":""},{"path":"https://schochastics.github.io/netUtils/reference/core_periphery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discrete core-periphery model — core_periphery","text":"list numeric vector entries (k1,k2,...ki...) ki assigns vertex either core (ki=1) periphery (ki=0), maximal correlation optimal pattern matrix","code":""},{"path":"https://schochastics.github.io/netUtils/reference/core_periphery.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Discrete core-periphery model — core_periphery","text":"function fits data optimal pattern matrix genetic algorithm (method=\"GA\") rank 1 approximation, either degree centrality (method=\"rk1_dc\") eigenvector centrality (method=\"rk1_ec\") . rank 1 approximation computationally far cheaper also experimental. Best compare results models.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/core_periphery.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Discrete core-periphery model — core_periphery","text":"Borgatti, Stephen P., Martin G. Everett. \"Models core/periphery structures.\" Social networks 21.4 (2000): 375-395.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/core_periphery.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Discrete core-periphery model — core_periphery","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/core_periphery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Discrete core-periphery model — core_periphery","text":"","code":"set.seed(121) #split graphs have a perfect core-periphery structure sg <- split_graph(n = 20, p = 0.3,core = 0.5) core_periphery(sg) #> $vec #>  [1] 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 #>  #> $corr #> [1] 1 #>"},{"path":"https://schochastics.github.io/netUtils/reference/dyad_census_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"dyad census with node attributes — dyad_census_attr","title":"dyad census with node attributes — dyad_census_attr","text":"dyad census node attributes","code":""},{"path":"https://schochastics.github.io/netUtils/reference/dyad_census_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dyad census with node attributes — dyad_census_attr","text":"","code":"dyad_census_attr(g, vattr)"},{"path":"https://schochastics.github.io/netUtils/reference/dyad_census_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dyad census with node attributes — dyad_census_attr","text":"g igraph object. directed graph. vattr name vertex attribute used.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/dyad_census_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dyad census with node attributes — dyad_census_attr","text":"dyad census data.frame.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/dyad_census_attr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dyad census with node attributes — dyad_census_attr","text":"node attribute integers 1 max(attr)","code":""},{"path":"https://schochastics.github.io/netUtils/reference/dyad_census_attr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dyad census with node attributes — dyad_census_attr","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/dyad_census_attr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dyad census with node attributes — dyad_census_attr","text":"","code":"library(igraph) g <- sample_gnp(10,0.4,directed = TRUE) V(g)$attr <- c(rep(1,5),rep(2,5)) dyad_census_attr(g,\"attr\") #>   from_attr to_attr asym_ab asym_ba sym null #> 1         1       1       0       0   1    9 #> 2         1       2       6       6   1   12 #> 3         2       2       0       0   5    5"},{"path":"https://schochastics.github.io/netUtils/reference/fast_cliques.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Cliques, maximal or not, fast — fast_cliques","title":"Find Cliques, maximal or not, fast — fast_cliques","text":"Enumerates (maximal) cliques using MACE. Can faster igraph circumstances","code":""},{"path":"https://schochastics.github.io/netUtils/reference/fast_cliques.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Cliques, maximal or not, fast — fast_cliques","text":"","code":"fast_cliques(g, what = \"M\", min = NULL, max = NULL, outfile = NA)"},{"path":"https://schochastics.github.io/netUtils/reference/fast_cliques.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Cliques, maximal or not, fast — fast_cliques","text":"g igraph object either \"M\" maximal cliques \"C\" cliques min Numeric constant, lower limit size cliques find. NULL means limit, ie. 0 max Numeric constant, upper limit size cliques find. NULL means limit outfile character. NA, cliques written file","code":""},{"path":"https://schochastics.github.io/netUtils/reference/fast_cliques.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Cliques, maximal or not, fast — fast_cliques","text":"list containing numeric vectors vertex ids. list element clique. outfile!=NA, output written specified file","code":""},{"path":"https://schochastics.github.io/netUtils/reference/fast_cliques.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Cliques, maximal or not, fast — fast_cliques","text":"C Code downloaded http://research.nii.ac.jp/~uno/codes.htm. Download code run make point environment variable called MACE_PATH binary. See http://research.nii.ac.jp/~uno/code/mace.html details. MACE faster igraph dense graphs.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/fast_cliques.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find Cliques, maximal or not, fast — fast_cliques","text":"Kazuhisa Makino, Takeaki Uno, \"New Algorithms Enumerating Maximal Cliques\", Lecture Notes Computer Science 3111 (Proceedings SWAT 2004), Springer, pp.260-272, 2004","code":""},{"path":"https://schochastics.github.io/netUtils/reference/fast_cliques.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find Cliques, maximal or not, fast — fast_cliques","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_cartesian.html","id":null,"dir":"Reference","previous_headings":"","what":"Cartesian product of two graphs — graph_cartesian","title":"Cartesian product of two graphs — graph_cartesian","text":"Compute Cartesian product two graphs","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_cartesian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cartesian product of two graphs — graph_cartesian","text":"","code":"graph_cartesian(g, h)"},{"path":"https://schochastics.github.io/netUtils/reference/graph_cartesian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cartesian product of two graphs — graph_cartesian","text":"g igraph object h igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_cartesian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cartesian product of two graphs — graph_cartesian","text":"Cartesian product igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_cartesian.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cartesian product of two graphs — graph_cartesian","text":"See https://en.wikipedia.org/wiki/Cartesian_product_of_graphs","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_cartesian.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cartesian product of two graphs — graph_cartesian","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_cartesian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cartesian product of two graphs — graph_cartesian","text":"","code":"library(igraph) g <- make_ring(4) h <- make_full_graph(2) graph_cartesian(g,h) #> IGRAPH e664e9f UN-- 8 12 --  #> + attr: name (v/c) #> + edges from e664e9f (vertex names): #>  [1] 1-1--2-1 1-2--2-2 2-1--3-1 2-2--3-2 3-1--4-1 3-2--4-2 1-1--4-1 1-2--4-2 #>  [9] 1-1--1-2 2-1--2-2 3-1--3-2 4-1--4-2"},{"path":"https://schochastics.github.io/netUtils/reference/graph_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph correlation — graph_cor","title":"Graph correlation — graph_cor","text":"function computes correlation networks. Implemented methods expect graph adjacency matrix, igraph, network object.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph correlation — graph_cor","text":"","code":"graph_cor(object1, object2)  # Default S3 method graph_cor(object1, object2)  # S3 method for class 'igraph' graph_cor(object1, object2, ...)  # S3 method for class 'matrix' graph_cor(object1, object2)  # S3 method for class 'array' graph_cor(object1, object2)"},{"path":"https://schochastics.github.io/netUtils/reference/graph_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph correlation — graph_cor","text":"object1 igraph object adjacency matrix object2 igraph object adjacency matrix vertex set object1 ... additional arguments","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graph correlation — graph_cor","text":"correlation graphs","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_direct.html","id":null,"dir":"Reference","previous_headings":"","what":"Direct product of two graphs — graph_direct","title":"Direct product of two graphs — graph_direct","text":"Compute direct product two graphs","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_direct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Direct product of two graphs — graph_direct","text":"","code":"graph_direct(g, h)"},{"path":"https://schochastics.github.io/netUtils/reference/graph_direct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Direct product of two graphs — graph_direct","text":"g igraph object h igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_direct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Direct product of two graphs — graph_direct","text":"Direct product igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_direct.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Direct product of two graphs — graph_direct","text":"See https://en.wikipedia.org/wiki/Tensor_product_of_graphs","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_direct.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Direct product of two graphs — graph_direct","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_direct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Direct product of two graphs — graph_direct","text":"","code":"library(igraph) g <- make_ring(4) h <- make_full_graph(2) graph_direct(g,h) #> IGRAPH 2a39303 UN-- 8 8 --  #> + attr: name (v/c) #> + edges from 2a39303 (vertex names): #> [1] 1-1--2-2 2-1--1-2 2-1--3-2 2-2--3-1 3-1--4-2 3-2--4-1 1-1--4-2 1-2--4-1"},{"path":"https://schochastics.github.io/netUtils/reference/graph_from_multi_edgelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple networks from a single edgelist with a typed attribute — graph_from_multi_edgelist","title":"Multiple networks from a single edgelist with a typed attribute — graph_from_multi_edgelist","text":"Create list igraph objects edgelist according type attribute","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_from_multi_edgelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple networks from a single edgelist with a typed attribute — graph_from_multi_edgelist","text":"","code":"graph_from_multi_edgelist(   d,   from = NULL,   to = NULL,   type = NULL,   weight = NULL,   directed = FALSE )"},{"path":"https://schochastics.github.io/netUtils/reference/graph_from_multi_edgelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple networks from a single edgelist with a typed attribute — graph_from_multi_edgelist","text":"d data frame. column name sender. NULL, defaults first column. column receiver. NULL, defaults second column. type type attribute split edgelist. NULL, defaults third column. weight optional column name edge weights. Ignored NULL. directed logical scalar, whether create directed graph.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_from_multi_edgelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple networks from a single edgelist with a typed attribute — graph_from_multi_edgelist","text":"list igraph objects.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_from_multi_edgelist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multiple networks from a single edgelist with a typed attribute — graph_from_multi_edgelist","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_from_multi_edgelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple networks from a single edgelist with a typed attribute — graph_from_multi_edgelist","text":"","code":"library(igraph) d <- data.frame(from=rep(c(1,2,3),3),to=rep(c(2,3,1),3),                 type=rep(c(\"a\",\"b\",\"c\"),each=3),weight=1:9) graph_from_multi_edgelist(d,\"from\",\"to\",\"type\",\"weight\") #> $a #> IGRAPH da791f7 UNW- 3 3 --  #> + attr: name (v/c), weight (e/n), type (e/c) #> + edges from da791f7 (vertex names): #> [1] 1--2 2--3 1--3 #>  #> $b #> IGRAPH 44c89c6 UNW- 3 3 --  #> + attr: name (v/c), weight (e/n), type (e/c) #> + edges from 44c89c6 (vertex names): #> [1] 1--2 2--3 1--3 #>  #> $c #> IGRAPH d70df04 UNW- 3 3 --  #> + attr: name (v/c), weight (e/n), type (e/c) #> + edges from d70df04 (vertex names): #> [1] 1--2 2--3 1--3 #>"},{"path":"https://schochastics.github.io/netUtils/reference/graph_kpartite.html","id":null,"dir":"Reference","previous_headings":"","what":"k partite graphs — graph_kpartite","title":"k partite graphs — graph_kpartite","text":"Create random k-partite graph.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_kpartite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"k partite graphs — graph_kpartite","text":"","code":"graph_kpartite(n = 10, grp = c(5, 5))"},{"path":"https://schochastics.github.io/netUtils/reference/graph_kpartite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"k partite graphs — graph_kpartite","text":"n number nodes grp vector partition sizes","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_kpartite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"k partite graphs — graph_kpartite","text":"igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_kpartite.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"k partite graphs — graph_kpartite","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_kpartite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"k partite graphs — graph_kpartite","text":"","code":"#3-partite graph with equal sized groups graph_kpartite(n = 15, grp = c(5,5,5)) #> IGRAPH 9055842 U--- 15 75 --  #> + edges from 9055842: #>  [1]  1-- 6  2-- 6  3-- 6  4-- 6  5-- 6  1-- 7  2-- 7  3-- 7  4-- 7  5-- 7 #> [11]  1-- 8  2-- 8  3-- 8  4-- 8  5-- 8  1-- 9  2-- 9  3-- 9  4-- 9  5-- 9 #> [21]  1--10  2--10  3--10  4--10  5--10  1--11  2--11  3--11  4--11  5--11 #> [31]  1--12  2--12  3--12  4--12  5--12  1--13  2--13  3--13  4--13  5--13 #> [41]  1--14  2--14  3--14  4--14  5--14  1--15  2--15  3--15  4--15  5--15 #> [51]  6--11  7--11  8--11  9--11 10--11  6--12  7--12  8--12  9--12 10--12 #> [61]  6--13  7--13  8--13  9--13 10--13  6--14  7--14  8--14  9--14 10--14 #> [71]  6--15  7--15  8--15  9--15 10--15"},{"path":"https://schochastics.github.io/netUtils/reference/graph_to_sage.html","id":null,"dir":"Reference","previous_headings":"","what":"convert igraph object to sage format — graph_to_sage","title":"convert igraph object to sage format — graph_to_sage","text":"convert igraph object sage format read SAGE","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_to_sage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert igraph object to sage format — graph_to_sage","text":"","code":"graph_to_sage(g)"},{"path":"https://schochastics.github.io/netUtils/reference/graph_to_sage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert igraph object to sage format — graph_to_sage","text":"g igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_to_sage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert igraph object to sage format — graph_to_sage","text":"sage string","code":""},{"path":"https://schochastics.github.io/netUtils/reference/graph_to_sage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"convert igraph object to sage format — graph_to_sage","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function — helpers","title":"helper function — helpers","text":"small functions deal typical network problems","code":""},{"path":"https://schochastics.github.io/netUtils/reference/helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function — helpers","text":"","code":"biggest_component(g)  delete_isolates(g)"},{"path":"https://schochastics.github.io/netUtils/reference/helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function — helpers","text":"g igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function — helpers","text":"igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/helpers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"helper function — helpers","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/reciprocity_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Reciprocity correlation coefficient — reciprocity_cor","title":"Reciprocity correlation coefficient — reciprocity_cor","text":"Reciprocity correlation coefficient","code":""},{"path":"https://schochastics.github.io/netUtils/reference/reciprocity_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reciprocity correlation coefficient — reciprocity_cor","text":"","code":"reciprocity_cor(g)"},{"path":"https://schochastics.github.io/netUtils/reference/reciprocity_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reciprocity correlation coefficient — reciprocity_cor","text":"g igraph object. directed graph","code":""},{"path":"https://schochastics.github.io/netUtils/reference/reciprocity_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reciprocity correlation coefficient — reciprocity_cor","text":"Reciprocity correlation","code":""},{"path":"https://schochastics.github.io/netUtils/reference/reciprocity_cor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reciprocity correlation coefficient — reciprocity_cor","text":"usual definition reciprocity defects. tell relative difference reciprocity compared purely random network number vertices edges. useful information reciprocity value , whether mutual links occur less often expected chance. overcome issue, reciprocity can defined correlation coefficient entries adjacency matrix directed graph: $$  \\frac{\\sum_{\\neq j} (a_{ij} - ')((a_{ji} - ')}{\\sum_{\\neq j} (a_{ij} - ')^2} $$ ' density g. definition gives absolute quantity directly allows one distinguish reciprocal (>0) antireciprocal (< 0) networks, mutual links occurring less often random respectively.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/reciprocity_cor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Reciprocity correlation coefficient — reciprocity_cor","text":"Diego Garlaschelli; Loffredo, Maria . (2004). \"Patterns Link Reciprocity Directed Networks\". Physical Review Letters. American Physical Society. 93 (26): 268701","code":""},{"path":"https://schochastics.github.io/netUtils/reference/reciprocity_cor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reciprocity correlation coefficient — reciprocity_cor","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/reciprocity_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reciprocity correlation coefficient — reciprocity_cor","text":"","code":"library(igraph) g <- sample_gnp(20,p = 0.3,directed = TRUE) reciprocity(g) #> [1] 0.3779528 reciprocity_cor(g) #> [1] 0.06569979"},{"path":"https://schochastics.github.io/netUtils/reference/sample_coreseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random graphs with a given coreness sequence — sample_coreseq","title":"Generate random graphs with a given coreness sequence — sample_coreseq","text":"Similar sample_degseq just coreness","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_coreseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random graphs with a given coreness sequence — sample_coreseq","text":"","code":"sample_coreseq(cores)"},{"path":"https://schochastics.github.io/netUtils/reference/sample_coreseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random graphs with a given coreness sequence — sample_coreseq","text":"cores coreness sequence","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_coreseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random graphs with a given coreness sequence — sample_coreseq","text":"igraph object graph coreness sequence input","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_coreseq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate random graphs with a given coreness sequence — sample_coreseq","text":"code adaption python code https://github.com/ktvank/Random-Graphs--Prescribed-K-Core-Sequences/","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_coreseq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate random graphs with a given coreness sequence — sample_coreseq","text":"Van Koevering, Katherine, Austin R. Benson, Jon Kleinberg. 2021. ‘Random Graphs Prescribed K-Core Sequences: New Null Model Network Analysis’. ArXiv:2102.12604. https://doi.org/10.1145/3442381.3450001.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_coreseq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate random graphs with a given coreness sequence — sample_coreseq","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_coreseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate random graphs with a given coreness sequence — sample_coreseq","text":"","code":"library(igraph) g1 <- make_graph(\"Zachary\") kcores1 <- coreness(g1) g2 <- sample_coreseq(kcores1) kcores2 <- coreness(g2)  #the sorted arrays are the same all(sort(kcores1)==sort(kcores2)) #> [1] TRUE"},{"path":"https://schochastics.github.io/netUtils/reference/sample_lfr.html","id":null,"dir":"Reference","previous_headings":"","what":"LFR benchmark graphs — sample_lfr","title":"LFR benchmark graphs — sample_lfr","text":"Generates benchmark networks clustering tasks priori known communities. algorithm accounts heterogeneity distributions node degrees community sizes.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_lfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LFR benchmark graphs — sample_lfr","text":"","code":"sample_lfr(   n,   tau1,   tau2,   mu,   average_degree = NULL,   max_degree = NULL,   min_community = NULL,   max_community = NULL,   on = 0,   om = 0 )"},{"path":"https://schochastics.github.io/netUtils/reference/sample_lfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LFR benchmark graphs — sample_lfr","text":"n Number nodes created graph. tau1 Power law exponent degree distribution created graph. value must strictly greater one tau2 Power law exponent community size distribution created graph. value must strictly greater one mu Fraction inter-community edges incident node. value must interval 0 1. average_degree Desired average degree nodes created graph. value must interval 0 n. Exactly one min_degree must specified, otherwise error raised max_degree Maximum degree nodes created graph. specified, set n-1. min_community Minimum size communities graph. specified, set min_degree max_community Maximum size communities graph. specified, set n, total number nodes graph. number overlapping nodes om number memberships overlapping nodes","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_lfr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LFR benchmark graphs — sample_lfr","text":"igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_lfr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LFR benchmark graphs — sample_lfr","text":"code adapted https://github.com/synwalk/synwalk-analysis/tree/master/lfr_generator","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_lfr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"LFR benchmark graphs — sample_lfr","text":". Lancichinetti, S. Fortunato, F. Radicchi.(2008) Benchmark graphs testing community detection algorithms. Physical Review E, 78. arXiv:0805.4770","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_lfr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LFR benchmark graphs — sample_lfr","text":"","code":"# Simple Girven-Newman benchmark graphs g <- sample_lfr(n = 128,average_degree = 16,                 max_degree = 16,mu = 0.1,                 min_community = 32,max_community = 32)"},{"path":"https://schochastics.github.io/netUtils/reference/sample_pa_homophilic.html","id":null,"dir":"Reference","previous_headings":"","what":"Homophilic random graph using BA preferential attachment model — sample_pa_homophilic","title":"Homophilic random graph using BA preferential attachment model — sample_pa_homophilic","text":"graph n nodes grown attaching new nodes m edges preferentially attached existing nodes high degree, depending homophily parameters.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_pa_homophilic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Homophilic random graph using BA preferential attachment model — sample_pa_homophilic","text":"","code":"sample_pa_homophilic(   n,   m,   minority_fraction,   h_ab,   h_ba = NULL,   directed = FALSE )"},{"path":"https://schochastics.github.io/netUtils/reference/sample_pa_homophilic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Homophilic random graph using BA preferential attachment model — sample_pa_homophilic","text":"n number nodes m number edges new node connected minority_fraction fraction nodes belong minority group h_ab probability connect node group groub b h_ba probability connect node group b groub . NULL, h_ab used. directed directed network created","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_pa_homophilic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Homophilic random graph using BA preferential attachment model — sample_pa_homophilic","text":"igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_pa_homophilic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Homophilic random graph using BA preferential attachment model — sample_pa_homophilic","text":"code adaption python code https://github.com/gesiscss/HomophilicNtwMinorities/","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_pa_homophilic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Homophilic random graph using BA preferential attachment model — sample_pa_homophilic","text":"Karimi, F., Génois, M., Wagner, C., Singer, P., & Strohmaier, M. (2018). Homophily influences ranking minorities social networks. Scientific reports, 8(1), 1-12. (https://www.nature.com/articles/s41598-018-29405-7) Espín-Noboa, L., Wagner, C., Strohmaier, M., & Karimi, F. (2022). Inequality inequity network-based ranking recommendation algorithms. Scientific reports, 12(1), 1-14. (https://www.nature.com/articles/s41598-022-05434-1)","code":""},{"path":"https://schochastics.github.io/netUtils/reference/sample_pa_homophilic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Homophilic random graph using BA preferential attachment model — sample_pa_homophilic","text":"David Schoch #maximally heterophilic network sample_pa_homophilic(n = 50, m = 2,minority_fraction = 0.2,h_ab = 1) #maximally homophilic network sample_pa_homophilic(n = 50, m = 2,minority_fraction = 0.2,h_ab = 0)","code":""},{"path":"https://schochastics.github.io/netUtils/reference/split_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"split graph — split_graph","title":"split graph — split_graph","text":"Create random split graph perfect core-periphery structure.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/split_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"split graph — split_graph","text":"","code":"split_graph(n, p, core)"},{"path":"https://schochastics.github.io/netUtils/reference/split_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"split graph — split_graph","text":"n number nodes p probability peripheral nodes connect core nodes core fraction nodes core","code":""},{"path":"https://schochastics.github.io/netUtils/reference/split_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"split graph — split_graph","text":"igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/split_graph.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"split graph — split_graph","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/split_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"split graph — split_graph","text":"","code":"#split graph with 20 nodes and a core size of 10 split_graph(n = 20, p = 0.4, 0.5) #> IGRAPH 8bfae1b U--- 20 78 --  #> + attr: core (v/l) #> + edges from 8bfae1b: #>  [1]  1-- 2  1-- 3  1-- 4  1-- 5  1-- 6  1-- 7  1-- 8  1-- 9  1--10  1--13 #> [11]  1--14  1--15  1--16  2-- 3  2-- 4  2-- 5  2-- 6  2-- 7  2-- 8  2-- 9 #> [21]  2--10  2--11  3-- 4  3-- 5  3-- 6  3-- 7  3-- 8  3-- 9  3--10  3--19 #> [31]  3--20  4-- 5  4-- 6  4-- 7  4-- 8  4-- 9  4--10  4--13  4--17  5-- 6 #> [41]  5-- 7  5-- 8  5-- 9  5--10  5--16  5--19  6-- 7  6-- 8  6-- 9  6--10 #> [51]  6--12  6--13  6--14  6--15  6--17  6--18  7-- 8  7-- 9  7--10  7--13 #> [61]  7--14  7--16  7--18  8-- 9  8--10  8--12  8--13  8--15  8--19  8--20 #> [71]  9--10  9--11  9--12  9--13 10--11 10--12 10--15 10--17"},{"path":"https://schochastics.github.io/netUtils/reference/str.igraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Print graphs to terminal — str.igraph","title":"Print graphs to terminal — str.igraph","text":"Prints igraph object terminal (different standard igraph method)","code":""},{"path":"https://schochastics.github.io/netUtils/reference/str.igraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print graphs to terminal — str.igraph","text":"","code":"# S3 method for class 'igraph' str(object, ...)"},{"path":"https://schochastics.github.io/netUtils/reference/str.igraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print graphs to terminal — str.igraph","text":"object igraph object ... additional arguments print (ignored)","code":""},{"path":"https://schochastics.github.io/netUtils/reference/str.igraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print graphs to terminal — str.igraph","text":"str return anything. obvious side effect output terminal.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/str.igraph.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print graphs to terminal — str.igraph","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/structural_equivalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximal Structural Equivalence — structural_equivalence","title":"Maximal Structural Equivalence — structural_equivalence","text":"Calculates structural equivalence undirected graph","code":""},{"path":"https://schochastics.github.io/netUtils/reference/structural_equivalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximal Structural Equivalence — structural_equivalence","text":"","code":"structural_equivalence(g)"},{"path":"https://schochastics.github.io/netUtils/reference/structural_equivalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximal Structural Equivalence — structural_equivalence","text":"g igraph object","code":""},{"path":"https://schochastics.github.io/netUtils/reference/structural_equivalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximal Structural Equivalence — structural_equivalence","text":"vector equivalence classes","code":""},{"path":"https://schochastics.github.io/netUtils/reference/structural_equivalence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maximal Structural Equivalence — structural_equivalence","text":"Two nodes u v structurally equivalent exactly neighbors. equivalence classes produced function either cliques empty graphs.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/structural_equivalence.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Maximal Structural Equivalence — structural_equivalence","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/triad_census_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"triad census with node attributes — triad_census_attr","title":"triad census with node attributes — triad_census_attr","text":"triad census node attributes","code":""},{"path":"https://schochastics.github.io/netUtils/reference/triad_census_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"triad census with node attributes — triad_census_attr","text":"","code":"triad_census_attr(g, vattr)"},{"path":"https://schochastics.github.io/netUtils/reference/triad_census_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"triad census with node attributes — triad_census_attr","text":"g igraph object. directed graph vattr name vertex attribute used","code":""},{"path":"https://schochastics.github.io/netUtils/reference/triad_census_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"triad census with node attributes — triad_census_attr","text":"triad census node attributes","code":""},{"path":"https://schochastics.github.io/netUtils/reference/triad_census_attr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"triad census with node attributes — triad_census_attr","text":"node attribute integers 1 max(attr). output named vector names form Txxx-abc, xxx corresponds standard triad census notation \"abc\" attributes involved nodes. implemented algorithm comparable algorithm Lienert et al.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/triad_census_attr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"triad census with node attributes — triad_census_attr","text":"Lienert, J., Koehly, L., Reed-Tsochas, F., & Marcum, C. S. (2019). efficient counting method colored triad census. Social Networks, 58, 136-142.","code":""},{"path":"https://schochastics.github.io/netUtils/reference/triad_census_attr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"triad census with node attributes — triad_census_attr","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/netUtils/reference/triad_census_attr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"triad census with node attributes — triad_census_attr","text":"","code":"library(igraph) set.seed(112) g <- sample_gnp(20,p = 0.3,directed = TRUE) # add a vertex attribute V(g)$type <- rep(1:2,each = 10) triad_census_attr(g,\"type\") #>  T003-111  T003-112  T003-122  T003-222  T012-111  T012-121  T012-112  T012-122  #>         8        33        28         7        32        40        31        19  #>  T012-211  T012-221  T012-212  T012-222 T021D-111 T021D-211 T021D-112 T021D-212  #>        27        41        25        26         9        19        19        21  #> T021D-122 T021D-222  T102-111  T102-112  T102-122  T102-211  T102-212  T102-222  #>         7        10        11        18        16         5        19        10  #> T021C-111 T021C-211 T021C-121 T021C-221 T021C-112 T021C-212 T021C-122 T021C-222  #>        17        23        29        17        19         7        24        10  #> T111U-111 T111U-121 T111U-112 T111U-122 T111U-211 T111U-221 T111U-212 T111U-222  #>         9        16         7        21         5        13        10         6  #> T021U-111 T021U-112 T021U-122 T021U-211 T021U-212 T021U-222 T030T-111 T030T-121  #>        11        19        13         3        14         7        11        11  #> T030T-112 T030T-122 T030T-211 T030T-221 T030T-212 T030T-222 T120U-111 T120U-112  #>        11        13        10        14         8         5         1         8  #> T120U-122 T120U-211 T120U-212 T120U-222 T111D-111 T111D-121 T111D-112 T111D-122  #>         6         0         4         4         4        12         8        13  #> T111D-211 T111D-221 T111D-212 T111D-222  T201-111  T201-112  T201-121  T201-122  #>        14        20        10        15         0         5         3         5  #>  T201-221  T201-222 T030C-111 T030C-112 T030C-122 T030C-222 T120C-111 T120C-121  #>         3         3         2        12        14         3         3         8  #> T120C-211 T120C-221 T120C-112 T120C-122 T120C-212 T120C-222 T120D-111 T120D-112  #>         7         5         5         7         7         6         0         9  #> T120D-211 T120D-212 T120D-122 T120D-222  T210-111  T210-121  T210-211  T210-221  #>         1         9         4         1         2         8         3         5  #>  T210-112  T210-122  T210-212  T210-222  T300-111  T300-112  T300-122  T300-222  #>         1         3         5         5         0         1         0         2"},{"path":"https://schochastics.github.io/netUtils/news/index.html","id":"netutils-082900","dir":"Changelog","previous_headings":"","what":"netUtils 0.8.2.900","title":"netUtils 0.8.2.900","text":"added tests #14","code":""},{"path":"https://schochastics.github.io/netUtils/news/index.html","id":"netutils-082","dir":"Changelog","previous_headings":"","what":"netUtils 0.8.2","title":"netUtils 0.8.2","text":"CRAN release: 2023-06-29 refactored sample_lfr() C++ (#9)","code":""},{"path":"https://schochastics.github.io/netUtils/news/index.html","id":"netutils-081","dir":"Changelog","previous_headings":"","what":"netUtils 0.8.1","title":"netUtils 0.8.1","text":"CRAN release: 2022-12-19 fixed bug prevented str.igraph working (#10)","code":""},{"path":"https://schochastics.github.io/netUtils/news/index.html","id":"netutils-080","dir":"Changelog","previous_headings":"","what":"netUtils 0.8.0","title":"netUtils 0.8.0","text":"CRAN release: 2022-10-08 added reciprocity_cor() fixed wrong str print (#5) switched Simulated Annealing Genetic Algorithm (#4) added tests added sample_lfr() (#9)","code":""},{"path":"https://schochastics.github.io/netUtils/news/index.html","id":"netutils-070","dir":"Changelog","previous_headings":"","what":"netUtils 0.7.0","title":"netUtils 0.7.0","text":"CRAN release: 2022-08-27 fixed documentation removed unfinished functions added examples","code":""},{"path":"https://schochastics.github.io/netUtils/news/index.html","id":"netutils-0609000","dir":"Changelog","previous_headings":"","what":"netUtils 0.6.0.9000","title":"netUtils 0.6.0.9000","text":"added sample_pa_homophilic()","code":""},{"path":"https://schochastics.github.io/netUtils/news/index.html","id":"netutils-0509000","dir":"Changelog","previous_headings":"","what":"netUtils 0.5.0.9000","title":"netUtils 0.5.0.9000","text":"renamed package netUtils added bipartite_from_data_frame() added graph_from_multi_edgelist() as_multi_adj() added structural_equivalence() added core_periphery() added sample_coreseq() added tests added graph products graph_cartesian() graph_direct() added fast max clique routine fast_cliques()","code":""}]
